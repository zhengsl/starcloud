<?xml version="1.0" encoding="UTF-8" ?>	
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.star.cloud.plat.dao.VMMapper">
	<resultMap id="basicVMInstanceMap" type="VMInstance">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="status" column="status" />
		<result property="networkId" column="network_id" />
		<result property="networkName" column="network_name" />
		<association property="innerIp" javaType="IPv4">
			<result property="address" column="innerip_address" />
		</association>
		<association property="outerIp" javaType="IPv4">
			<result property="address" column="outerip_address" />
		</association>
		<association property="profile" javaType="VMProfile">
			<id property="id" column="vmprofile_id" />
			<result property="name" column="vmprofile_name" />
		</association>
		<association property="card" javaType="Card">
			<id property="id" column="card_id" />
			<result property="name" column="card_name" />
		</association>
	</resultMap>

	<select id="getVMInstance" resultMap="basicVMInstanceMap">
		select * from vm_instance where id = #{0} or name = #{1}
	</select>
	
	<select id="getAllVMInstances" resultMap="basicVMInstanceMap">
		select * from vm_instance
	</select>
	
	<select id="getVMInstanceUnderCard" resultMap="basicVMInstanceMap">
		select * from vm_instance where card_id = #{0} or card_name = #{1}
	</select>
	
	<select id="getVMInstanceUnderNetwork" resultMap="basicVMInstanceMap">
		select * from vm_instance where network_id = #{0} or network_name = #{1}
	</select>
	
	<delete id="deleteVMInstance" parameterType="VMInstance">
		delete from vm_instance where id = #{id} or name = #{name}
	</delete>
	
	<resultMap id="basicVMProfileMap" type="VMProfile">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="type" column="type" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
		<result property="vcpu" column="vcpu"/>
		<result property="ram" column="ram" />
		<result property="disk" column="disk" />
		<result property="imageName" column="image_name" />
		<result property="imageId" column="image_id" />
	</resultMap>
	
	<select id="getVMProfile" resultMap="basicVMProfileMap">
		select * from vm_profile where id = #{0} or name = #{1}
	</select>
	
	<select id="getAllVMProfiles" resultMap="basicVMProfileMap">
		select * from vm_profile
	</select>
	
	<insert id="insertVMProfile" parameterType="VMProfile">
		insert into vm_profile (id, name, type, vcpu, ram, disk, image_name, image_id)
		values (#{id}, #{name}, #{type}, #{vcpu}, #{ram}, #{disk}, #{imageName}, #{imageId})	
	</insert>
	
	<delete id="deleteVMProfile" parameterType="VMProfile">
		delete from vm_profile where id = #{id} or name = #{name}
	</delete>
	
	<update id="updateVMProfile" parameterType="VMProfile">
		update vm_profile set
			name = #{name}, type = #{type}, vcpu = #{vcpu}, ram = #{ram}, disk = #{disk}, image_name = #{imageName}, image_id = #{imageId}
		where id = #{id}
	</update>
	
	<insert id="insertVMInstance" parameterType="VMInstanceDTO">
		insert into vm_instance (id, name, innerip_address, outerip_address, vmprofile_id, vmprofile_name, card_id, card_name, network_id, network_name, status)
		values (#{id}, #{name}, #{inneripAddress}, #{outeripAddress}, #{vmprofileId}, #{vmprofileName}, #{cardId}, #{cardName}, #{networkId}, #{networkName}, #{status})	
	</insert>
	
	<update id="updateVMInstanceStatus" parameterType="VMInstanceDTO">
		update vm_instance set
			status = #{status}
		where id = #{id}
	</update>
</mapper>
